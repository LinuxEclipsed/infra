#apiVersion: v1
#kind: Namespace
#metadata:
#  name: paperless
#---
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: media
#  namespace: paperless
#spec:
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 5Gi
#
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: broker
  namespace: paperless
spec:
  replicas: 1
  selector:
    matchLabels:
      app: broker
  template:
    metadata:
      labels:
        app: broker
    spec:
      containers:
        - name: redis
          image: docker.io/library/redis:7
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /data
              name: redisdata
      volumes:
        - name: redisdata
          persistentVolumeClaim:
            claimName: redisdata

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webserver
  namespace: paperless
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webserver
  template:
    metadata:
      labels:
        app: webserver
    spec:
      containers:
        - name: paperless
          image: ghcr.io/paperless-ngx/paperless-ngx:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          envFrom:
            - configMapRef:
                name: paperless-env
          volumeMounts:
            - mountPath: /usr/src/paperless/data
              name: data
            - mountPath: /usr/src/paperless/media/documents/
              name: media
            - mountPath: /usr/src/paperless/export
              name: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: paperless-data-pvc
        - name: media
          nfs:
            server: 192.168.2.252
            path: "/mnt/tank/nfs/Documents/Paperless"